{"version":3,"sources":["components/Navigation.jsx","components/Field.jsx","components/Button.jsx","components/ManipulationPanel.jsx","utils/index.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","length","difficulty","onChangeDifficulty","upVisibility","downVisibility","className","onClick","Field","fields","map","row","column","Button","status","onStart","onRestart","onStop","ManipulationPanel","onChange","getFoodPosition","fieldSize","excludes","x","Math","floor","random","y","some","item","initFields","snake","i","cols","Array","fill","push","food","initialPosition","initialValues","Difficulty","GameStatus","Object","freeze","init","playing","suspended","gameover","Direction","up","right","left","down","OppositeDirection","Delta","DirectionKeyCodeMap","37","38","39","40","timer","undefined","unsubscribe","clearInterval","App","useState","setFields","body","setBody","setStatus","tick","setTick","direction","setDirection","setDifficulty","useEffect","setInterval","handleMoving","onChangeDirection","useCallback","newDirection","handleKeyDown","e","keyCode","document","addEventListener","removeEventListener","position","delta","newPosition","eatme","newBody","removingTrack","pop","unshift","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d6c1607.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navigation = ({length, difficulty = 3, onChangeDifficulty}) =>{\n    const upVisibility = difficulty < 5 ? '' : 'is-hidden'\n    const downVisibility = difficulty > 1 ? '' : 'is-hidden'\n    const onUpDifficulty = () => onChangeDifficulty(difficulty + 1)\n    const onDownDifficulty = () => onChangeDifficulty(difficulty - 1)\n    return(\n        <div className='navigation'>\n            <div className='navigation-item'>\n                <span className='navigation-label'>Length: </span>\n                <div className='navigation-item-number-container'>\n                    <div className='num-board'>{length}</div>\n                </div>\n            </div>\n        <div className='navigation-item'>\n            <span className='navigation-label'>Difficulty: </span>\n            <div className='navigation-item-number-container'>\n                <span className='num-board'>{difficulty}</span>\n                <div className='difficulty-button-container'>\n                    <div \n                    className={`difficulty-button difficulty-up ${upVisibility}`}\n                    onClick={onUpDifficulty} \n                    ></div>\n                <div\n                    className={`difficulty-button dificulty-down ${downVisibility}`}\n                    onClick={onDownDifficulty}\n                    ></div>\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n};\n\nexport default Navigation;","import React from 'react'\n\nconst Field = ({fields}) =>{\n    return(\n        <div className='field'>\n            {\n                fields.map((row) => {\n                    return row.map((column) => {\n                        //配列の中身がクラス名に適用される。columnにはsnakeとかが入る。\n                        return <div className={`dots ${column}`}></div>\n                    })\n                })\n            }\n            \n        </div>\n    )\n}\n\nexport default Field;","import React from 'react'\n\nconst Button = ({status,onStart, onRestart, onStop}) =>{\n    return(\n        <div className='button'>\n            {/* 前の式がtrueの時だけ&&が実行される */}\n            {status === 'gameover' && <button className='btn btn-gameover' onClick={onRestart}>gameover</button>}\n            {status === 'init' && <button className='btn btn-init'  onClick={onStart}>start</button>}\n            {status === 'suspended' && <button className='btn btn-suspended' onClick={onStart}>start</button>}\n            {status === 'playing' && <button className='btn btn-playing' onClick={onStop}>stop</button>}\n        </div>\n    )\n}\n\nexport default Button","import React from 'react'\n\nconst ManipulationPanel = ({onChange}) =>{\n    const onUp = () => onChange('up')\n    const onRight = () => onChange('right')\n    const onLeft = () => onChange('left')\n    const onDown = () => onChange('down')\n\n    return(\n        <div className='manipulation-panel'>\n            <button className='manipulation-btn btn btn-left' onClick={onLeft}>←</button>\n            <div>\n            <button className='manipulation-btn btn btn-up' onClick={onUp}>↑</button>\n            <button className='manipulation-btn btn btn-down' onClick={onDown}>↓</button>\n            </div>\n            <button className='manipulation-btn btn btn-right' onClick={onRight}>→</button>\n        </div>\n    )\n}\n\nexport default ManipulationPanel","export const getFoodPosition = (fieldSize, excludes) => {\n    while(true){\n    //  Math.floorは取りたい数（33）に＋1した数を入れる。35 - 1 -1 = 33 + 1= 34 \n    const x = Math.floor(Math.random() * (fieldSize - 1 -1)) + 1;\n    const y = Math.floor(Math.random() * (fieldSize - 1 - 1)) + 1;\n    //some関数はitem.xとxが＝ならtrueを返す。どちらか一方で良い。そするともっかいwhileで回る。\n    const conflict = excludes.some(item => item.x === x && item.y === y)\n\n    if(!conflict){\n        //?\n    return {x, y}\n        }\n    }\n}\n\n\n\nexport const initFields = (fieldSize, snake) =>{\n    const fields = []\n    for (let i=0; i < fieldSize; i++){\n        const cols = new Array (fieldSize).fill('')\n        fields.push(cols)\n    }\n    //snakeの現在位置\n    fields[snake.y][snake.x] = 'snake'\n\n    //\n    const food = getFoodPosition(fieldSize, [snake])\n    fields[food.y][food.x] = 'food'\n\n    return fields\n}","import React,{useCallback,useState, useEffect} from 'react';\nimport Navigation from './components/Navigation';\nimport Field from './components/Field';\nimport Button from './components/Button';\nimport ManipulationPanel from './components/ManipulationPanel';\nimport {initFields, getFoodPosition} from './utils/index'\n\nconst initialPosition = {x: 17, y: 17}//初期位置\nconst initialValues = initFields(35, initialPosition)//初期位置把握\nconst defaultInterval = 100\nconst defaultDifficulty = 3\n\nconst Difficulty = [1000, 500, 100, 50, 10]\n\n\n\n//ゲームのプレイ状態\nconst GameStatus = Object.freeze({\n  init: 'init',\n  playing: 'playing',\n  suspended: 'suspended',\n  gameover: 'gameover'\n})\n\n//進む方向\nconst Direction = Object.freeze({\n  up: 'up',\n  right: 'right',\n  left: 'left',\n  down: 'down'\n})\n\n//進むのと逆の方向\nconst OppositeDirection = Object.freeze({\n  up: 'down',\n  right: 'left',\n  left: 'right',\n  down: 'up'\n})\n\n//upでどのように動くかのとこ\nconst Delta = Object.freeze({\n  up: {x: 0, y: -1},\n  right: {x: 1, y: 0},\n  left: {x: -1, y: 0},\n  down: {x: 0, y: 1}\n})\n\n//キーボードの矢印の設定\nconst DirectionKeyCodeMap = Object.freeze({\n  37: Direction.left,\n  38: Direction.up,\n  39: Direction.right,\n  40: Direction.down,\n})\n\nlet timer = undefined\n\n//タイマーを止める処理。何度も使うので関数化。\nconst unsubscribe = () => {\n  if(!timer){\n    return\n  }\n  clearInterval(timer)\n}\n\n\nconst isCollision = (fieldSize, position) =>{\n  //左の壁に当たったとき\n  if(position.y < 0 || position.x<0){\n    return true;\n  }\n\n  //上の壁に当たったとき\n  if(position.y > fieldSize -1 || position.x > fieldSize -1){\n    return true;\n  }\n  return false\n}\n\nconst eatme = (fields, position) => {\n  return fields[position.y][position.x] === 'snake'\n}\n\nfunction App() {\n  const [fields, setFields] = useState(initialValues)\n  const [body, setBody] = useState([])\n  const [status, setStatus] = useState(GameStatus.init)\n  const [tick, setTick] = useState(0)\n  const [direction, setDirection] = useState(Direction.up)\n  const [difficulty, setDifficulty] = useState(defaultDifficulty)\n\n  useEffect(() => {\n    //初期位置に配置\n    setBody([initialPosition])\n    //ゲームの時間管理\n    const interval = Difficulty[difficulty - 1]\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, interval)\n    return unsubscribe//コンポーネントが削除されるときにタイマーも削除。\n  }, [difficulty])\n\n\n  useEffect(() => {\n    //positionがundefinedになるため、nullチェック。\n    if(body.length === 0 || status !== GameStatus.playing){\n      return\n    }\n    const canContinue = handleMoving()\n    if(!canContinue){\n      setStatus(GameStatus.gameover)\n    }\n  }, [tick])\n\n  //ゲームがスタートするとplayingになる。\n  const onStart = () => setStatus(GameStatus.playing)\n\n  const onStop = () => setStatus(GameStatus.suspended)\n\n  //gameover後の手順\n  const onRestart = () =>{\n    timer = setInterval(() => {\n      setTick(tick => tick + 1)\n    }, defaultInterval)\n    setDirection(Direction.up)\n    setStatus(GameStatus.init)\n    setBody([initialPosition])\n    setFields(initFields(35, initialPosition))\n  }\n\n  //??\n  const onChangeDirection = useCallback((newDirection) => {\n    if(status !== GameStatus.playing){\n      return direction\n    }\n    if(OppositeDirection[direction] === newDirection){\n      return\n    }\n    setDirection(newDirection)\n  }, [direction, status])\n\n  //難易度調整\n  const onChangeDifficulty = useCallback((difficulty) => {\n      if(status !== GameStatus.init){\n        return\n      }\n      if(difficulty < 1 || difficulty > difficulty.length){\n        return\n      }\n      setDifficulty(difficulty)\n  },[status, difficulty])\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      const newDirection = DirectionKeyCodeMap[e.keyCode]\n      if(!newDirection){\n        return;\n      }\n\n      onChangeDirection(newDirection)\n    };\n    document.addEventListener('keydown', handleKeyDown)\n    //イベントリスナーのクリーン\n    return() => document.removeEventListener('keydown', handleKeyDown)\n  }, [onChangeDirection])\n\n  const handleMoving = () =>{\n    const {x,y} = body[0]//現在地を把握\n    const delta = Delta[direction]//今の方向による変化量\n    const newPosition = {\n      x: x + delta.x, \n      y: y + delta.y,\n    }\n    if(isCollision(fields.length, newPosition) || eatme (fields, newPosition)){\n\n      return false\n    }\n    //餌を食べる処理\n    const newBody = [...body]\n    if(fields[newPosition.y][newPosition.x] !== 'food'){\n      const removingTrack = newBody.pop()\n      fields[removingTrack.y][removingTrack.x] = ''\n    }else{\n      //newbody配列にnewpositionを追加\n      const food = getFoodPosition(fields.length, [...newBody, newPosition])\n      fields[food.y][food.x] = 'food'\n    }\n    fields[newPosition.y][newPosition.x] = 'snake'\n    newBody.unshift(newPosition)\n\n    setBody(newBody)\n    setFields(fields)//fieldsを更新し、動いたように見える。\n    return true\n  }\n\n\n  return(\n    <div className='App'>\n      <header className='header'>\n        <div className='title-container'>\n          <h1 className='title'>Snake Game</h1>\n        </div>\n        <Navigation \n        length={body.length} \n        difficulty={difficulty}\n        onChangeDifficulty={onChangeDifficulty} \n         />\n      </header>\n      <main className='main'>\n        <Field fields={fields} />\n      </main>\n      <footer className='footer'>\n      <Button status={status} onStart={onStart} onRestart={onRestart} onStop={onStop} />\n      <ManipulationPanel onChange={onChangeDirection} />\n      </footer>\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}